if (window.socket && window.socket.connected) {
    window.socket.disconnect(); // üßπ –æ—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
}
window.socket = io({ transports: ["websocket", "polling"] });
console.log("‚úÖ chat.js —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω");

document.addEventListener("DOMContentLoaded", () => {
    const chatContainer = document.getElementById("chat-container") 
                        || document.getElementById("chat-page-container");
    const chatBtn = document.getElementById("open-chat-btn");
    const chatInput = document.getElementById("chat-input")
                        || document.getElementById("user-input");
    const sendBtn = document.getElementById("send-btn")
                        || document.querySelector('#chatForm button[type="submit"]');
    const messages = document.getElementById("messages");

    // === Scroll Spy ===
    const sections = document.querySelectorAll("section[id]");
    const navLinks = document.querySelectorAll(".site-nav a");
    const homeLink = document.getElementById("nav-home-link");

    function activateNavLink() {
        let current = "";
        sections.forEach((section) => {
            const sectionTop = section.offsetTop - 120;
            if (window.scrollY >= sectionTop) {
                current = section.getAttribute("id");
            }
        });

        navLinks.forEach((link) => {
            link.classList.remove("active");
            if (link.getAttribute("href").includes(current)) {
                link.classList.add("active");
            }
        });
    }

    const calendarIcon = document.querySelector(".calendar-icon");
    const bookingInput = document.getElementById("bookingDateInput");
    if (calendarIcon && bookingInput) {
        calendarIcon.addEventListener("click", () => {
            bookingInput.focus();
            bookingInput.click();
        });
    }

    window.addEventListener("scroll", activateNavLink);

    // === –°–∫—Ä—ã—Ç–∏–µ —à–∞–ø–∫–∏ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ ===
    let lastScrollTop = 0;
    const header = document.querySelector(".site-header");
    const pullTab = document.getElementById("header-pull-tab");

    window.addEventListener("scroll", function () {
        const scrollTop = window.scrollY || document.documentElement.scrollTop;

        if (scrollTop > 10) {
            header.classList.add("scrolled");
        } else {
            header.classList.remove("scrolled");
        }

        if (scrollTop > lastScrollTop && scrollTop > 100) {
            header.classList.add("hidden");
        } else {
            header.classList.remove("hidden");
        }

        lastScrollTop = Math.max(scrollTop, 0);
    });

    pullTab?.addEventListener("click", () => {
        header.classList.remove("hidden");
    });

    // üí¨ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    const appendMessage = (text, isUser = false) => {
        const div = document.createElement("div");
        div.className = isUser ? "user-message" : "bot-message";
        div.textContent = text;
        messages?.appendChild(div);
        messages.scrollTop = messages.scrollHeight;
    };

    // üìå –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞
    if (chatBtn && chatContainer) {
        chatContainer.classList.add("hidden");
        chatBtn.addEventListener("click", () => {
            chatContainer.classList.toggle("hidden");
        });
    }

    // üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    if (sendBtn && chatInput && messages) {
        sendBtn.addEventListener("click", () => {
            const msg = chatInput.value.trim();
            if (!msg) return;

            appendMessage(msg, true);
            chatInput.value = "";

            fetch("/chat/api", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "X-CSRF-Token": getCSRFToken() || ''
                },
                body: JSON.stringify({ message: msg }),
            })
            .then(res => {
                if (!res.ok) {
                    throw new Error(`HTTP error! status: ${res.status}`);
                }
                return res.json();
            })
            .then(data => {
                appendMessage(data.response || "ü§ñ –û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω", false);
            })
            .catch(err => {
                console.error("–û—à–∏–±–∫–∞ —á–∞—Ç–∞:", err);
                appendMessage("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", false);
            });
        });

        chatInput.addEventListener("keypress", (e) => {
            if (e.key === "Enter") {
                e.preventDefault();
                sendBtn.click();
            }
        });
    }

    // WebSocket —Å–æ–±—ã—Ç–∏—è
    socket.on("connect", () => {
        console.log("üü¢ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω");
    });

    socket.on("disconnect", () => {
        console.warn("üî¥ WebSocket –æ—Ç–∫–ª—é—á–µ–Ω");
    });

    socket.on("message", (data) => {
        appendMessage(typeof data === 'string' ? data : data.text || "ü§ñ –û—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞");
    });

    socket.emit("message", "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞");

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π —Å–ª–æ—Ç–æ–≤ (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –∏–∑–≤–Ω–µ)
    socket.on("slots_update", (data) => {
        console.log("üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–æ–≤:", data);
    });

    socket.on("booking_updated", () => {
        const dateInput = document.getElementById("bookingDate");
        if (dateInput && dateInput.value) {
            fetch('/event', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ date: dateInput.value })
            });
        }
    });

    if (homeLink) {
        homeLink.addEventListener("click", (e) => {
            if (window.location.pathname === "/" || window.location.pathname.endsWith("index")) {
                e.preventDefault();
                const hero = document.getElementById("hero");
                if (hero) {
                    hero.scrollIntoView({ behavior: "smooth" });
                } else {
                    window.scrollTo({ top: 0, behavior: "smooth" });
                }
            }
        });
    }
});

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è CSRF
window.getCSRFToken = window.getCSRFToken || function () {
    return document.querySelector('meta[name="csrf-token"]')?.content 
        || document.querySelector('input[name="csrf_token"]')?.value;
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞
function initChat() {
    console.log("‚úÖ chat.js —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω");
    
    const chatContainer = document.getElementById('chat-container-fixed');
    if (!chatContainer) return;

    // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    chatContainer.addEventListener('click', (e) => {
        const button = e.target.closest('button[data-action]');
        if (!button) return;

        const action = button.dataset.action;
        switch (action) {
            case 'showSchedule':
                showSchedule();
                break;
            case 'showFAQ':
                showFAQ();
                break;
            case 'updateClientData':
                updateClientData();
                break;
            case 'bookTraining':
                bookTraining();
                break;
        }
    });

    // === –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ ===
    function uploadMedia(e) {
        const file = e.target.files?.[0];
        if (!file) return;

        const formData = new FormData();
        formData.append('file', file);

        fetch('/files/upload', {
            method: 'POST',
            body: formData
        })
        .then(r => r.ok ? r.json() : Promise.reject(r.statusText))
        .then(() => appendMessage("üìé –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω!", true))
        .catch(err => {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞:", err);
            appendMessage("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª.", false);
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    const fileUpload = document.getElementById('file-upload');
    if (fileUpload) {
        fileUpload.addEventListener('change', uploadMedia);
    }

    // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–∞...
    setupWebSocket();
    initChatForm();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initChat);